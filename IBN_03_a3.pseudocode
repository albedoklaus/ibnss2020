boolean TestAndSet(boolean *target) // TSL
void Swap(boolean *a, boolean *b) // XCHG

class Semaphore { boolean value = 0;
                  boolean guard = 0; }

Semaphore::P() {
    while (TestAndSet(*guard)) // short wait time
          ;
    if (value == 0) {
        Put on queue of threads waiting for lock;
        Go to sleep and set guard to 0;
    } else {
        value = value - 1;
        guard = 0;
    }
}

Semaphore::V() {
    while (TestAndSet(*guard))
        ;
    if anyone on wait queue {
        Swap(boolean *value, boolean *guard)
        // Take a waiting thread off wait queue and put it at the front of the ready queue;
    } else {
        value = value + 1;
    }
    guard = 0;
}


